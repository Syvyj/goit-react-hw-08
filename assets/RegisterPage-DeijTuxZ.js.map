{"version":3,"file":"RegisterPage-DeijTuxZ.js","sources":["../../src/pages/Register/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Button, TextField, Typography, Paper, Box } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport { register } from '../../redux/auth/operations';\nimport styles from './RegisterPage.module.css';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(50, 'Name must be less than 50 characters')\n    .required('Name is required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(7, 'Password must be at least 7 characters')\n    .required('Password is required'),\n});\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    dispatch(register(values))\n      .unwrap()\n      .catch(() => {\n        // Error handling is managed by the auth slice\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={styles.container}>\n      <Paper elevation={3} className={styles.paper}>\n        <Box className={styles.iconWrapper}>\n          <PersonAddIcon color=\"primary\" sx={{ fontSize: 40 }} />\n        </Box>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\" color=\"primary\">\n          Register\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\" gutterBottom>\n          Create your account to get started\n        </Typography>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form className={styles.form}>\n              <Field\n                as={TextField}\n                fullWidth\n                name=\"name\"\n                label=\"Name\"\n                error={touched.name && Boolean(errors.name)}\n                helperText={touched.name && errors.name}\n                margin=\"normal\"\n                size=\"small\"\n              />\n              <Field\n                as={TextField}\n                fullWidth\n                name=\"email\"\n                label=\"Email\"\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n                margin=\"normal\"\n                size=\"small\"\n              />\n              <Field\n                as={TextField}\n                fullWidth\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n                margin=\"normal\"\n                size=\"small\"\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                className={styles.submitButton}\n                disableElevation\n              >\n                Register\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["validationSchema","Yup.object","Yup.string","RegisterPage","dispatch","useDispatch","handleSubmit","values","setSubmitting","register","jsx","Container","styles","jsxs","Paper","Box","PersonAddIcon","Typography","Formik","errors","touched","isSubmitting","Form","Field","TextField","Button"],"mappings":"+VAQMA,EAAmBC,EAAW,CAClC,KAAMC,EAAW,EACd,IAAI,EAAG,oCAAoC,EAC3C,IAAI,GAAI,sCAAsC,EAC9C,SAAS,kBAAkB,EAC9B,MAAOA,EAAW,EACf,MAAM,uBAAuB,EAC7B,SAAS,mBAAmB,EAC/B,SAAUA,EAAW,EAClB,IAAI,EAAG,wCAAwC,EAC/C,SAAS,sBAAsB,CACpC,CAAC,EAEKC,EAAe,IAAM,CACzB,MAAMC,EAAWC,EAAY,EAEvBC,EAAe,CAACC,EAAQ,CAAE,cAAAC,KAAoB,CAClDJ,EAASK,EAASF,CAAM,CAAC,EACtB,OAAO,EACP,MAAM,IAAM,CAAA,CAEZ,EACA,QAAQ,IAAM,CACbC,EAAc,EAAK,CAAA,CACpB,CACL,EAEA,OACGE,EAAAA,IAAAC,EAAA,CAAU,SAAS,KAAK,UAAWC,EAAO,UACzC,SAAAC,EAAAA,KAACC,EAAM,CAAA,UAAW,EAAG,UAAWF,EAAO,MACrC,SAAA,CAAAF,EAAA,IAACK,EAAI,CAAA,UAAWH,EAAO,YACrB,SAACF,MAAAM,EAAA,CAAc,MAAM,UAAU,GAAI,CAAE,SAAU,EAAA,CAAM,CAAA,EACvD,EACCN,EAAA,IAAAO,EAAA,CAAW,QAAQ,KAAK,UAAU,KAAK,aAAY,GAAC,MAAM,SAAS,MAAM,UAAU,SAEpF,WAAA,EACAP,EAAAA,IAACO,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,MAAM,SAAS,aAAY,GAAC,SAE/E,oCAAA,CAAA,EACAP,EAAA,IAACQ,EAAA,CACC,cAAe,CAAE,KAAM,GAAI,MAAO,GAAI,SAAU,EAAG,EACnD,iBAAAlB,EACA,SAAUM,EAET,SAAA,CAAC,CAAE,OAAAa,EAAQ,QAAAC,EAAS,aAAAC,KAClBR,OAAAS,EAAA,CAAK,UAAWV,EAAO,KACtB,SAAA,CAAAF,EAAA,IAACa,EAAA,CACC,GAAIC,EACJ,UAAS,GACT,KAAK,OACL,MAAM,OACN,MAAOJ,EAAQ,MAAQ,EAAQD,EAAO,KACtC,WAAYC,EAAQ,MAAQD,EAAO,KACnC,OAAO,SACP,KAAK,OAAA,CACP,EACAT,EAAA,IAACa,EAAA,CACC,GAAIC,EACJ,UAAS,GACT,KAAK,QACL,MAAM,QACN,MAAOJ,EAAQ,OAAS,EAAQD,EAAO,MACvC,WAAYC,EAAQ,OAASD,EAAO,MACpC,OAAO,SACP,KAAK,OAAA,CACP,EACAT,EAAA,IAACa,EAAA,CACC,GAAIC,EACJ,UAAS,GACT,KAAK,WACL,KAAK,WACL,MAAM,WACN,MAAOJ,EAAQ,UAAY,EAAQD,EAAO,SAC1C,WAAYC,EAAQ,UAAYD,EAAO,SACvC,OAAO,SACP,KAAK,OAAA,CACP,EACAT,EAAA,IAACe,EAAA,CACC,KAAK,SACL,QAAQ,YACR,MAAM,UACN,SAAUJ,EACV,UAAS,GACT,KAAK,QACL,UAAWT,EAAO,aAClB,iBAAgB,GACjB,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,CACF,CAAA,CAEJ"}